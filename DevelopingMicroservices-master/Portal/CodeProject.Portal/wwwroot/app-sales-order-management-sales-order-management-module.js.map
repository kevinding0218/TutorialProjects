{"version":3,"sources":["webpack:///./src/app/sales-order-management/customer-inquiry/customer-inquiry.component.css","webpack:///./src/app/sales-order-management/customer-inquiry/customer-inquiry.component.html","webpack:///./src/app/sales-order-management/customer-inquiry/customer-inquiry.component.ts","webpack:///./src/app/sales-order-management/customer-maintenance/customer-maintenance.component.css","webpack:///./src/app/sales-order-management/customer-maintenance/customer-maintenance.component.html","webpack:///./src/app/sales-order-management/customer-maintenance/customer-maintenance.component.ts","webpack:///./src/app/sales-order-management/sales-order-inquiry/sales-order-inquiry.component.css","webpack:///./src/app/sales-order-management/sales-order-inquiry/sales-order-inquiry.component.html","webpack:///./src/app/sales-order-management/sales-order-inquiry/sales-order-inquiry.component.ts","webpack:///./src/app/sales-order-management/sales-order-maintenance/delete-sales-order-lineitem-dialog.html","webpack:///./src/app/sales-order-management/sales-order-maintenance/sales-order-maintenance.component.css","webpack:///./src/app/sales-order-management/sales-order-maintenance/sales-order-maintenance.component.html","webpack:///./src/app/sales-order-management/sales-order-maintenance/sales-order-maintenance.component.ts","webpack:///./src/app/sales-order-management/sales-order-maintenance/submit-sales-order-dialog.html","webpack:///./src/app/sales-order-management/sales-order-management-nav-bar/sales-order-management-nav-bar.component.css","webpack:///./src/app/sales-order-management/sales-order-management-nav-bar/sales-order-management-nav-bar.component.html","webpack:///./src/app/sales-order-management/sales-order-management-nav-bar/sales-order-management-nav-bar.component.ts","webpack:///./src/app/sales-order-management/sales-order-management.module.ts","webpack:///./src/app/sales-order-management/sales-order-management.routing.ts","webpack:///./src/app/sales-order-management/view-models/customer-inquiry.viewmodel.ts","webpack:///./src/app/sales-order-management/view-models/customer.viewmodel.ts","webpack:///./src/app/sales-order-management/view-models/product.viewmodel.ts","webpack:///./src/app/sales-order-management/view-models/sales-order-detail.viewmodel.ts","webpack:///./src/app/sales-order-management/view-models/sales-order-inquiry.viewmodel.ts","webpack:///./src/app/sales-order-management/view-models/sales-order.viewmodel.ts"],"names":[],"mappings":"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","file":"app-sales-order-management-sales-order-management-module.js","sourcesContent":["module.exports = \"table {\\n    width: 100%;\\n  }\\n\\n  .highlight{\\n    background: #42A948; /* green */\\n  }\"","module.exports = \"\\n<app-sales-order-management-nav-bar></app-sales-order-management-nav-bar>\\n\\n<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>\\n      <h2>Customer Inquiry</h2>\\n    </mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n\\n\\n    <form #form=\\\"ngForm\\\">\\n\\n      <div>\\n        <mat-form-field style=\\\"width:300px\\\">\\n          <input matInput name=\\\"Name\\\" #searchField value=\\\"{{customerInquiryViewModel.customerName}}\\\"\\n           [(ngModel)]=\\\"customerInquiryViewModel.customerName\\\"\\n            placeholder=\\\"Customer Name\\\">\\n        </mat-form-field>\\n        &nbsp;\\n        <button mat-flat-button color=\\\"primary\\\" (click)=\\\"resetSearch()\\\">Reset</button>&nbsp;\\n      </div>\\n\\n    </form>\\n\\n    <mat-paginator [length]=\\\"customerInquiryViewModel.totalCustomers\\\" [showFirstLastButtons]=\\\"true\\\" [pageIndex]=\\\"customerInquiryViewModel.currentPageIndex\\\"\\n      [pageSize]=\\\"customerInquiryViewModel.pageSize\\\" [pageSizeOptions]=\\\"customerInquiryViewModel.pageSizeOptions\\\"\\n      (page)=\\\"onPaginateChange($event)\\\"></mat-paginator>\\n\\n    <table class=\\\"table\\\" mat-table [dataSource]=\\\"customerInquiryViewModel.customers\\\" matSort (matSortChange)=\\\"sortData($event)\\\" class=\\\"mat-elevation-z8\\\">\\n\\n      <ng-container matColumnDef=\\\"customerName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"CustomerName\\\">\\n            Customer Name\\n         </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n           <span class=\\\"table-responsive-custom\\\">Customer Name:&nbsp;</span>\\n          {{element.customerName}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"addressLine1\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"AddressLine1\\\"> Address Line 1 </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n            <span class=\\\"table-responsive-custom\\\">Address Line 1:&nbsp;</span>\\n          {{element.addressLine1}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"addressLine2\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"AddressLine2\\\"> Address Line 2 </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n            <span class=\\\"table-responsive-custom\\\">Address Line 2:&nbsp;</span>\\n          {{element.addressLine2}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"city\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"City\\\"> City </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n          <span class=\\\"table-responsive-custom\\\">City:&nbsp;</span>\\n          {{element.city}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"region\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Region\\\"> State </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n            <span class=\\\"table-responsive-custom\\\">State:&nbsp;</span>\\n           {{element.region}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"postalCode\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"PostalCode\\\"> Postal Code </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n            <span class=\\\"table-responsive-custom\\\">Postal Code:&nbsp;</span>\\n           {{element.postalCode}} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"customerInquiryViewModel.displayedColumns\\\"></tr>\\n      <tr style=\\\"cursor: pointer;\\\" mat-row *matRowDef=\\\"let row; columns: customerInquiryViewModel.displayedColumns; let i = index\\\" (click)=\\\"selectCustomer(i)\\\"></tr>\\n  \\n    </table>\\n\\n  </mat-card-content>\\n  <mat-card-actions>\\n\\n\\n    <mat-paginator [length]=\\\"customerInquiryViewModel.totalCustomers\\\" [showFirstLastButtons]=\\\"true\\\" [pageSize]=\\\"customerInquiryViewModel.pageSize\\\"\\n      [pageIndex]=\\\"customerInquiryViewModel.currentPageIndex\\\" [pageSizeOptions]=\\\"customerInquiryViewModel.pageSizeOptions\\\"\\n      (page)=\\\"onPaginateChange($event)\\\"></mat-paginator>\\n\\n  </mat-card-actions>\\n</mat-card>\"","\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { CustomerViewModelResponse } from './../view-models/customer-response.viewmodel';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { SessionService } from '../../shared-components-services/session.service';\nimport { CustomerInquiryViewModelResponse } from '../view-models/customer-inquiry-response.viewmodel';\nimport { CustomerViewModel } from '../view-models/customer.viewmodel';\nimport { CustomerInquiryViewModel } from '../view-models/customer-inquiry.viewmodel';\nimport { HttpService } from './../../shared-components-services/http.service';\nimport { AlertService } from './../../shared-components-services/alert.service';\nimport { MatSort } from '@angular/material';\nimport { debounceTime } from 'rxjs/operators';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-customer-inquiry',\n  templateUrl: './customer-inquiry.component.html',\n  styleUrls: ['./customer-inquiry.component.css']\n})\n\nexport class CustomerInquiryComponent implements OnInit {\n\n  @ViewChild('form') searchForm: NgForm;\n\n  public customerInquiryViewModel: CustomerInquiryViewModel;\n  public selectedRowIndex = -1;\n  private lastSearchValue: string;\n\n  constructor(private router: Router, private sessionService: SessionService, private httpService: HttpService,\n     private alertService: AlertService) {\n\n    this.sessionService.moduleLoadedEvent.emit();\n\n    this.customerInquiryViewModel = new CustomerInquiryViewModel();\n    this.customerInquiryViewModel.pageSize = 20;\n\n    this.customerInquiryViewModel.displayedColumns = ['customerName', 'addressLine1', 'addressLine2', 'city', 'region', 'postalCode'];\n    this.customerInquiryViewModel.pageSizeOptions = [5, 10, 25, 100];\n\n    this.initializeSearch();\n }\n\n  ngOnInit() {\n\n    this.searchForm.valueChanges.pipe(debounceTime(1000), distinctUntilChanged()).subscribe(\n      changes => {\n          this.customerInquiryViewModel.currentPageNumber = 1;\n          this.customerInquiryViewModel.currentPageIndex = 0;\n          if (this.lastSearchValue !== this.customerInquiryViewModel.customerName) {\n            this.executeSearch();\n          }\n        }\n      );\n\n    this.executeSearch();\n\n  }\n\n  private initializeSearch() {\n\n    this.customerInquiryViewModel.customerName = '';\n    this.customerInquiryViewModel.currentPageNumber = 1;\n    this.customerInquiryViewModel.currentPageIndex = 0;\n    this.customerInquiryViewModel.totalPages = 0;\n    this.customerInquiryViewModel.totalCustomers = 0;\n    this.customerInquiryViewModel.sortDirection = '';\n    this.customerInquiryViewModel.sortExpression = '';\n\n    this.customerInquiryViewModel.customers = new Array<CustomerViewModel>();\n\n  }\n\n  private executeSearch() {\n    let url = this.sessionService.appSettings.salesOrderManagementWebApiUrl + 'customer/customerinquiry';\n    this.httpService.HttpPost<CustomerInquiryViewModelResponse>(url, this.customerInquiryViewModel).\n        subscribe((response: CustomerInquiryViewModelResponse) => {this.customerInquirySuccess(response);\n    }, response => this.customerInquiryFailed(response));\n  }\n\n  private customerInquirySuccess(response: CustomerInquiryViewModelResponse) {\n    this.customerInquiryViewModel.customers = response.entity;\n    this.customerInquiryViewModel.totalCustomers = response.totalRows;\n    this.customerInquiryViewModel.totalPages = response.totalPages;\n  }\n\n  private customerInquiryFailed(error: HttpErrorResponse) {\n    let errorResponse: CustomerViewModelResponse = error.error;\n    if (error.status > 0) {\n      this.alertService.ShowErrorMessage(errorResponse.returnMessage[0]);\n    } else {\n      this.alertService.ShowErrorMessage(error.message);\n    }\n  }\n\n  public onPaginateChange(event) {\n    this.customerInquiryViewModel.currentPageNumber = event.pageIndex + 1;\n    this.customerInquiryViewModel.currentPageIndex = event.pageIndex;\n    this.customerInquiryViewModel.pageSize = event.pageSize;\n    this.executeSearch();\n  }\n\n  public sortData(sort: MatSort) {\n    this.customerInquiryViewModel.currentPageNumber = 1;\n    this.customerInquiryViewModel.currentPageIndex = 0;\n    this.customerInquiryViewModel.sortDirection = sort.direction;\n    this.customerInquiryViewModel.sortExpression = sort.active;\n    this.executeSearch();\n  }\n\n  public resetSearch() {\n    this.lastSearchValue = '';\n    this.customerInquiryViewModel.customerName = '';\n    this.initializeSearch();\n    this.executeSearch();\n  }\n\n  public selectCustomer(row){\n    let customerId = this.customerInquiryViewModel.customers[row].customerId;\n    this.router.navigate(['/salesordermanagement/customer-maintenance'], { queryParams: { id: customerId } });\n  }\n\n}\n\n","module.exports = \"\"","module.exports = \"\\n<app-sales-order-management-nav-bar></app-sales-order-management-nav-bar>\\n\\n<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>\\n      <h2>Customer Maintenance</h2>\\n    </mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n\\n    <form>\\n\\n      <div>\\n        <mat-form-field style=\\\"width:300px\\\">\\n          <input [disabled]=\\\"readonlyMode\\\" matInput name=\\\"CustomerName\\\" value=\\\"{{customerViewModel.customerName}}\\\" \\n          [(ngModel)]=\\\"customerViewModel.customerName\\\" placeholder=\\\"Customer Name\\\">\\n        </mat-form-field>\\n      </div>\\n\\n      \\n      <div>\\n        <mat-form-field style=\\\"width:300px\\\">\\n          <input [disabled]=\\\"readonlyMode\\\" matInput name=\\\"AddressLine1\\\" value=\\\"{{customerViewModel.AddressLine1}}\\\" \\n          [(ngModel)]=\\\"customerViewModel.addressLine1\\\" placeholder=\\\"Address Line 1\\\">\\n        </mat-form-field>\\n      </div>\\n\\n      <div>\\n        <mat-form-field style=\\\"width:300px\\\">\\n          <input [disabled]=\\\"readonlyMode\\\" matInput name=\\\"AddressLine2\\\" value=\\\"{{customerViewModel.AddressLine2}}\\\" \\n          [(ngModel)]=\\\"customerViewModel.addressLine2\\\" placeholder=\\\"Address Line 2\\\">\\n        </mat-form-field>\\n      </div>\\n\\n      <div>\\n        <mat-form-field style=\\\"width:300px\\\">\\n          <input [disabled]=\\\"readonlyMode\\\" matInput name=\\\"City\\\" value=\\\"{{customerViewModel.city}}\\\" \\n          [(ngModel)]=\\\"customerViewModel.city\\\" placeholder=\\\"City\\\">\\n        </mat-form-field>\\n      </div>\\n\\n      <div>\\n        <mat-form-field style=\\\"width:300px\\\">\\n          <input [disabled]=\\\"readonlyMode\\\" matInput name=\\\"Region\\\" value=\\\"{{customerViewModel.region}}\\\" \\n          [(ngModel)]=\\\"customerViewModel.region\\\" placeholder=\\\"State/Region\\\">\\n        </mat-form-field>\\n      </div>\\n\\n      <div>\\n        <mat-form-field style=\\\"width:300px\\\">\\n          <input [disabled]=\\\"readonlyMode\\\" matInput name=\\\"PostalCode\\\" value=\\\"{{customerViewModel.postalCode}}\\\" \\n          [(ngModel)]=\\\"customerViewModel.postalCode\\\" placeholder=\\\"Postal Code\\\">\\n        </mat-form-field>\\n      </div>\\n\\n    </form>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button [disabled]=\\\"readonlyMode==false\\\" mat-flat-button color=\\\"primary\\\" (click)=\\\"editCustomer()\\\">Edit Customer</button>&nbsp;\\n    <button [disabled]=\\\"readonlyMode==true\\\" mat-flat-button color=\\\"primary\\\" (click)=\\\"createOrUpdateCustomer()\\\">Save Customer</button>&nbsp;\\n    <button [disabled]=\\\"createMode==true\\\" mat-flat-button color=\\\"primary\\\"  (click)=\\\"createNewCustomer()\\\">Create New Customer</button>&nbsp;\\n    <button [disabled]=\\\"createMode==true || readonlyMode==false\\\" mat-flat-button color=\\\"primary\\\" (click)=\\\"createSalesOrder()\\\">Create Sales Order</button>\\n  </mat-card-actions>\\n</mat-card>\\n\"","\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { HttpService } from './../../shared-components-services/http.service';\nimport { AlertService } from './../../shared-components-services/alert.service';\nimport { SessionService } from './../../shared-components-services/session.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CustomerViewModel } from '../view-models/customer.viewmodel';\nimport { CustomerViewModelResponse } from '../view-models/customer-response.viewmodel';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { SalesOrderViewModel } from '../view-models/sales-order.viewmodel';\nimport { SalesOrderViewModelResponse } from '../view-models/sales-order-response.viewmodel';\n\n@Component({\n  selector: 'app-customer-maintenance',\n  templateUrl: './customer-maintenance.component.html',\n  styleUrls: ['./customer-maintenance.component.css']\n})\nexport class CustomerMaintenanceComponent implements OnInit, OnDestroy {\n\n  public customerViewModel: CustomerViewModel;\n  public createMode: Boolean;\n  public readonlyMode: Boolean;\n\n  private routerSubscription: Subscription;\n\n\n  constructor(private router: Router, private route: ActivatedRoute, private sessionService: SessionService,\n    private alertService: AlertService, private httpService: HttpService) {\n\n    this.customerViewModel = new CustomerViewModel();\n    this.customerViewModel.customerName = '';\n    this.customerViewModel.addressLine1 = '';\n    this.customerViewModel.addressLine2 = '';\n    this.customerViewModel.city = '';\n    this.customerViewModel.region = '';\n    this.customerViewModel.postalCode = '';\n    this.customerViewModel.customerId = 0;\n\n    this.createMode = true;\n    this.readonlyMode = false;\n\n  }\n\n  ngOnInit() {\n\n    this.routerSubscription = this.route\n      .queryParams\n      .subscribe(params => {\n        this.customerViewModel.customerId = +params['id'] || 0;\n        if (this.customerViewModel.customerId > 0) {\n            this.createMode = false;\n            this.readonlyMode = true;\n            this.getCustomerInformation();\n        }\n      });\n\n  }\n\n  ngOnDestroy() {\n    this.routerSubscription.unsubscribe();\n  }\n\n  private getCustomerInformation() {\n    let url = this.sessionService.appSettings.salesOrderManagementWebApiUrl + 'customer/getcustomer';\n    this.httpService.HttpPost<CustomerViewModelResponse>(url, this.customerViewModel).subscribe((response: CustomerViewModelResponse) => {\n      this.getCustomerSuccess(response);\n    }, response => this.getCustomerFailed(response));\n\n  }\n\n  private initializeCustomer() {\n    this.customerViewModel = new CustomerViewModel();\n    this.customerViewModel.customerName = '';\n    this.customerViewModel.addressLine1 = '';\n    this.customerViewModel.addressLine2 = '';\n    this.customerViewModel.city = '';\n    this.customerViewModel.region = '';\n    this.customerViewModel.postalCode = '';\n    this.customerViewModel.customerId = 0;\n  }\n\n  public createNewCustomer() {\n    this.readonlyMode = false;\n    this.initializeCustomer();\n  }\n\n  private getCustomerSuccess(response: CustomerViewModelResponse) {\n    this.customerViewModel = response.entity;\n  }\n\n  private getCustomerFailed(error: HttpErrorResponse) {\n\n    let errorResponse: CustomerViewModelResponse = error.error;\n    if (error.status > 0) {\n      this.alertService.ShowErrorMessage(errorResponse.returnMessage[0]);\n    } else {\n      this.alertService.ShowErrorMessage(error.message);\n    }\n\n  }\n\n  public createOrUpdateCustomer() {\n\n    let customer = new CustomerViewModel();\n    customer = this.customerViewModel;\n\n    let url = '';\n\n    if (customer.customerId === 0) {\n      url = this.sessionService.appSettings.salesOrderManagementWebApiUrl + 'customer/createcustomer';\n    } else {\n      url = this.sessionService.appSettings.salesOrderManagementWebApiUrl + 'customer/updatecustomer';\n    }\n\n    this.httpService.HttpPost<CustomerViewModelResponse>(url, customer).subscribe((response: CustomerViewModelResponse) => {\n      this.createOrUpdateCustomerSuccess(response);\n    }, response => this.createOrUpdateCustomerFailed(response));\n\n  }\n\n  private createOrUpdateCustomerSuccess(response: CustomerViewModelResponse) {\n\n    let customerViewModel: CustomerViewModel = response.entity;\n    this.customerViewModel.customerId = customerViewModel.customerId;\n    const message = 'Customer successfully saved.';\n    this.alertService.ShowSuccessMessage(message);\n\n    this.createMode = false;\n    this.readonlyMode = true;\n\n  }\n\n  private createOrUpdateCustomerFailed(error: HttpErrorResponse) {\n\n    let errorResponse: CustomerViewModelResponse = error.error;\n    if (error.status > 0) {\n      this.alertService.ShowErrorMessage(errorResponse.returnMessage[0]);\n    } else {\n      this.alertService.ShowErrorMessage(error.message);\n    }\n\n  }\n\n  private editCustomer() {\n    this.createMode = false;\n    this.readonlyMode = false;\n  }\n\n  public createSalesOrder() {\n\n    let salesOrderViewModel = new SalesOrderViewModel();\n    salesOrderViewModel.customerId = this.customerViewModel.customerId;\n\n    let url = this.sessionService.appSettings.salesOrderManagementWebApiUrl + 'salesorder/createsalesorder';\n    this.httpService.HttpPost<SalesOrderViewModelResponse>(url, salesOrderViewModel)\n    .subscribe((response: SalesOrderViewModelResponse) => {\n      this.createSalesOrderSuccess(response);\n    }, response => this.createSalesOrderFailed(response));\n\n  }\n\n  private createSalesOrderSuccess(response: SalesOrderViewModelResponse) {\n    let salesOrderId = response.entity.salesOrderId;\n    this.router.navigate(['/salesordermanagement/sales-order-maintenance'], { queryParams: { id: salesOrderId } });\n  }\n\n  private createSalesOrderFailed(error: HttpErrorResponse) {\n    let errorResponse: CustomerViewModelResponse = error.error;\n    if (error.status > 0) {\n      this.alertService.ShowErrorMessage(errorResponse.returnMessage[0]);\n    } else {\n      this.alertService.ShowErrorMessage(error.message);\n    }\n  }\n\n}\n\n","module.exports = \"table {\\n    width: 100%;\\n  }\\n\\n  .highlight{\\n    background: #42A948; /* green */\\n  }\"","module.exports = \"\\n<app-sales-order-management-nav-bar></app-sales-order-management-nav-bar>\\n\\n<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>\\n      <h2>Sales Order Inquiry</h2>\\n    </mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n\\n    <form #form=\\\"ngForm\\\">\\n\\n      <div>\\n        <mat-form-field style=\\\"width:300px\\\">\\n          <input matInput name=\\\"Name\\\" #searchField value=\\\"{{salesOrderInquiryViewModel.customerName}}\\\" [(ngModel)]=\\\"salesOrderInquiryViewModel.customerName\\\"\\n            placeholder=\\\"Customer Name\\\">\\n        </mat-form-field>\\n        &nbsp;\\n        <button mat-flat-button color=\\\"primary\\\" (click)=\\\"resetSearch()\\\">Reset</button>&nbsp;\\n      </div>\\n\\n    </form>\\n\\n    <mat-paginator [length]=\\\"salesOrderInquiryViewModel.totalSalesOrders\\\" [showFirstLastButtons]=\\\"true\\\"\\n      [pageIndex]=\\\"salesOrderInquiryViewModel.currentPageIndex\\\" [pageSize]=\\\"salesOrderInquiryViewModel.pageSize\\\"\\n      [pageSizeOptions]=\\\"salesOrderInquiryViewModel.pageSizeOptions\\\" (page)=\\\"onPaginateChange($event)\\\"></mat-paginator>\\n\\n    <table mat-table [dataSource]=\\\"salesOrderInquiryViewModel.salesOrders\\\" matSort (matSortChange)=\\\"sortData($event)\\\"\\n      class=\\\"mat-elevation-z8\\\">\\n\\n      <ng-container matColumnDef=\\\"salesOrderNumber\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"SalesOrderNumber\\\"> PO Number</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.salesOrderNumber}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"customerName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Customer.Name\\\"> Customer Name </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.customerName}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"city\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Customer.City\\\"> City </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.city}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"region\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Customer.Region\\\"> State </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.region}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"orderTotal\\\">\\n          <th mat-header-cell *matHeaderCellDef  mat-sort-header=\\\"OrderTotal\\\">Order Total</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.orderTotal | currency}} </td>\\n        </ng-container>\\n\\n      <ng-container matColumnDef=\\\"orderDate\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"DateCreated\\\"> Order Date</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.orderDate}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"salesOrderStatusDescription\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"SalesOrderStatus.Description\\\">Status</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.salesOrderStatusDescription}} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"salesOrderInquiryViewModel.displayedColumns\\\"></tr>\\n      <tr style=\\\"cursor: pointer;\\\" mat-row *matRowDef=\\\"let row; columns: salesOrderInquiryViewModel.displayedColumns; let i = index\\\"\\n        (click)=\\\"selectSalesOrder(i)\\\"></tr>\\n\\n    </table>\\n\\n  </mat-card-content>\\n  <mat-card-actions>\\n\\n\\n    <mat-paginator [length]=\\\"salesOrderInquiryViewModel.totalSalesOrders\\\" [showFirstLastButtons]=\\\"true\\\"\\n      [pageSize]=\\\"salesOrderInquiryViewModel.pageSize\\\" [pageIndex]=\\\"salesOrderInquiryViewModel.currentPageIndex\\\"\\n      [pageSizeOptions]=\\\"salesOrderInquiryViewModel.pageSizeOptions\\\" (page)=\\\"onPaginateChange($event)\\\"></mat-paginator>\\n\\n  </mat-card-actions>\\n</mat-card>\"","\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { SalesOrderViewModelResponse } from './../view-models/sales-order-response.viewmodel';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { SessionService } from '../../shared-components-services/session.service';\nimport { SalesOrderInquiryViewModelResponse } from '../view-models/sales-order-inquiry-response.viewmodel';\nimport { SalesOrderViewModel } from '../view-models/sales-order.viewmodel';\nimport { SalesOrderInquiryViewModel } from '../view-models/sales-order-inquiry.viewmodel';\nimport { HttpService } from './../../shared-components-services/http.service';\nimport { AlertService } from './../../shared-components-services/alert.service';\nimport { MatSort } from '@angular/material';\nimport { debounceTime } from 'rxjs/operators';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-sales-order-inquiry',\n  templateUrl: './sales-order-inquiry.component.html',\n  styleUrls: ['./sales-order-inquiry.component.css']\n})\n\nexport class SalesOrderInquiryComponent implements OnInit {\n\n  @ViewChild('form') searchForm: NgForm;\n\n  public salesOrderInquiryViewModel: SalesOrderInquiryViewModel;\n  public selectedRowIndex = -1;\n  private lastSearchValue: string;\n\n  constructor(private router: Router, private sessionService: SessionService, private httpService: HttpService, \n    private alertService: AlertService) {\n\n    this.sessionService.moduleLoadedEvent.emit();\n\n    this.salesOrderInquiryViewModel = new SalesOrderInquiryViewModel();\n    this.salesOrderInquiryViewModel.pageSize = 20;\n\n    this.salesOrderInquiryViewModel.displayedColumns = ['salesOrderNumber', 'customerName',\n     'city', 'region', 'orderTotal', 'orderDate', 'salesOrderStatusDescription'];\n    this.salesOrderInquiryViewModel.pageSizeOptions = [5, 10, 25, 100];\n\n    this.initializeSearch();\n\n }\n\n  ngOnInit() {\n\n    this.searchForm.valueChanges.pipe(debounceTime(1000), distinctUntilChanged()).subscribe(\n      changes => {\n          this.salesOrderInquiryViewModel.currentPageNumber = 1;\n          this.salesOrderInquiryViewModel.currentPageIndex = 0;\n          if (this.lastSearchValue !== this.salesOrderInquiryViewModel.customerName) {\n            this.executeSearch();\n          }\n        }\n      );\n\n    this.executeSearch();\n\n  }\n\n  private initializeSearch() {\n\n    this.salesOrderInquiryViewModel.customerName = '';\n    this.salesOrderInquiryViewModel.currentPageNumber = 1;\n    this.salesOrderInquiryViewModel.currentPageIndex = 0;\n    this.salesOrderInquiryViewModel.totalPages = 0;\n    this.salesOrderInquiryViewModel.totalSalesOrders = 0;\n    this.salesOrderInquiryViewModel.sortDirection = 'DESC';\n    this.salesOrderInquiryViewModel.sortExpression = 'SalesOrderNumber';\n\n    this.salesOrderInquiryViewModel.salesOrders = new Array<SalesOrderViewModel>();\n\n  }\n\n  private executeSearch() {\n    let url = this.sessionService.appSettings.salesOrderManagementWebApiUrl + 'salesorder/salesorderinquiry';\n    this.httpService.HttpPost<SalesOrderInquiryViewModelResponse>(url, this.salesOrderInquiryViewModel).\n        subscribe((response: SalesOrderInquiryViewModelResponse) => {this.salesOrderInquirySuccess(response);\n    }, response => this.salesOrderInquiryFailed(response));\n  }\n\n  private salesOrderInquirySuccess(response: SalesOrderInquiryViewModelResponse) {\n    response.entity.forEach(element => {\n      let orderDate = element.dateCreated.toString().substring(0, 10);\n      element.orderDate = orderDate.substring(5, 7) + '/' + orderDate.substring(8, 10) + '/' + orderDate.substring(0, 4);\n    });\n    this.salesOrderInquiryViewModel.salesOrders = response.entity;\n    this.salesOrderInquiryViewModel.totalSalesOrders = response.totalRows;\n    this.salesOrderInquiryViewModel.totalPages = response.totalPages;\n  }\n\n  private salesOrderInquiryFailed(error: HttpErrorResponse) {\n    let errorResponse: SalesOrderViewModelResponse = error.error;\n    if (error.status > 0) {\n      this.alertService.ShowErrorMessage(errorResponse.returnMessage[0]);\n    } else {\n      this.alertService.ShowErrorMessage(error.message);\n    }\n  }\n\n  public onPaginateChange(event) {\n    this.salesOrderInquiryViewModel.currentPageNumber = event.pageIndex + 1;\n    this.salesOrderInquiryViewModel.currentPageIndex = event.pageIndex;\n    this.salesOrderInquiryViewModel.pageSize = event.pageSize;\n    this.executeSearch();\n  }\n\n  public sortData(sort: MatSort) {\n    this.salesOrderInquiryViewModel.currentPageNumber = 1;\n    this.salesOrderInquiryViewModel.currentPageIndex = 0;\n    this.salesOrderInquiryViewModel.sortDirection = sort.direction;\n    this.salesOrderInquiryViewModel.sortExpression = sort.active;\n    this.executeSearch();\n  }\n\n  public resetSearch() {\n    this.lastSearchValue = '';\n    this.salesOrderInquiryViewModel.customerName = '';\n    this.initializeSearch();\n    this.executeSearch();\n  }\n\n  public selectSalesOrder(row) {\n    let salesOrderId = this.salesOrderInquiryViewModel.salesOrders[row].salesOrderId;\n    this.router.navigate(['/salesordermanagement/sales-order-maintenance'], { queryParams: { id: salesOrderId } });\n  }\n\n}\n\n\n","module.exports = \"<h1 mat-dialog-title>{{data.title}}</h1>\\n<div mat-dialog-content>\\n  <p>Are you sure you want to Delete this line item?</p>\\n  <mat-form-field>\\n    <input matInput [disabled]=\\\"true\\\" [(ngModel)]=\\\"data.productNumber\\\" placeholder=\\\"Product Number\\\">\\n  </mat-form-field>&nbsp;\\n\\n  <mat-form-field>\\n        <input matInput [disabled]=\\\"true\\\" [(ngModel)]=\\\"data.orderQuantity\\\" placeholder=\\\"Order Quanitity\\\">\\n      </mat-form-field>&nbsp;\\n\\n      <mat-form-field>\\n            <input matInput [disabled]=\\\"true\\\" [(ngModel)]=\\\"data.unitPrice\\\" placeholder=\\\"Unit Price\\\">\\n          </mat-form-field>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button [mat-dialog-close]=\\\"0\\\">No</button>\\n  <button mat-button [mat-dialog-close]=\\\"data.index\\\" cdkFocusInitial>Yes</button>\\n</div>\\n\\n\"","module.exports = \"table {\\n    width: 100%;\\n  }\\n\\n  .highlight{\\n    background: #42A948; /* green */\\n  }\"","module.exports = \"\\n<app-sales-order-management-nav-bar></app-sales-order-management-nav-bar>\\n\\n<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>\\n      <h2>Sales Order Entry</h2>\\n    </mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n\\n    <form>\\n\\n      <div>\\n        <mat-form-field style=\\\"width:300px\\\">\\n          <input [disabled]=\\\"true\\\" matInput name=\\\"SalesOrderNumber\\\" value=\\\"{{salesOrderViewModel.salesOrderNumber}}\\\"\\n            [(ngModel)]=\\\"salesOrderViewModel.salesOrderNumber\\\" placeholder=\\\"Sales Order #\\\">\\n        </mat-form-field>\\n\\n        <mat-form-field style=\\\"width:300px\\\">\\n          <input [disabled]=\\\"true\\\" type=\\\"date\\\" matInput name=\\\"OrderDate\\\" value=\\\"{{salesOrderViewModel.orderDate}}\\\"\\n            [(ngModel)]=\\\"salesOrderViewModel.orderDate\\\" placeholder=\\\"Order Date\\\">\\n        </mat-form-field>\\n\\n        <mat-form-field style=\\\"width:300px\\\">\\n          <input [disabled]=\\\"true\\\" matInput name=\\\"SalesOrderStatusDescription\\\" value=\\\"{{salesOrderViewModel.salesOrderStatusDescription}}\\\"\\n            [(ngModel)]=\\\"salesOrderViewModel.salesOrderStatusDescription\\\" placeholder=\\\"Status\\\">\\n        </mat-form-field>\\n\\n        <mat-form-field style=\\\"width:300px\\\">\\n            <input [disabled]=\\\"true\\\" matInput name=\\\"SalesOrderTotal\\\" value=\\\"{{salesOrderViewModel.orderTotalFormatted}}\\\"\\n              [(ngModel)]=\\\"salesOrderViewModel.orderTotalFormatted\\\" placeholder=\\\"Order Total\\\">\\n          </mat-form-field>\\n\\n      </div>\\n\\n      <div>\\n        <mat-form-field style=\\\"width:300px\\\">\\n          <input [disabled]=\\\"true\\\" matInput name=\\\"CustomerName\\\" value=\\\"{{salesOrderViewModel.customerName}}\\\"\\n            [(ngModel)]=\\\"salesOrderViewModel.customerName\\\" placeholder=\\\"Customer Name\\\">\\n        </mat-form-field>\\n\\n        <mat-form-field style=\\\"width:300px\\\">\\n          <input [disabled]=\\\"true\\\" matInput name=\\\"AddressLine1\\\" value=\\\"{{salesOrderViewModel.addressLine1}}\\\"\\n            [(ngModel)]=\\\"salesOrderViewModel.addressLine1\\\" placeholder=\\\"Address\\\">\\n        </mat-form-field>\\n\\n        <mat-form-field style=\\\"width:300px\\\">\\n          <input [disabled]=\\\"true\\\" matInput name=\\\"AddressLine2\\\" value=\\\"{{salesOrderViewModel.addressLine2}}\\\"\\n            [(ngModel)]=\\\"salesOrderViewModel.addressLine2\\\" placeholder=\\\"Address\\\">\\n        </mat-form-field>\\n      </div>\\n\\n      <div>\\n        <mat-form-field style=\\\"width:300px\\\">\\n          <input [disabled]=\\\"true\\\" matInput name=\\\"City\\\" value=\\\"{{salesOrderViewModel.city}}\\\" [(ngModel)]=\\\"salesOrderViewModel.city\\\"\\n            placeholder=\\\"City\\\">\\n        </mat-form-field>\\n\\n        <mat-form-field style=\\\"width:300px\\\">\\n          <input [disabled]=\\\"true\\\" matInput name=\\\"Region\\\" value=\\\"{{salesOrderViewModel.region}}\\\" [(ngModel)]=\\\"salesOrderViewModel.region\\\"\\n            placeholder=\\\"State/Region\\\">\\n        </mat-form-field>\\n\\n        <mat-form-field style=\\\"width:300px\\\">\\n          <input [disabled]=\\\"true\\\" matInput name=\\\"PostalCode\\\" value=\\\"{{salesOrderViewModel.postalCode}}\\\" [(ngModel)]=\\\"salesOrderViewModel.postalCode\\\"\\n            placeholder=\\\"Postal Code\\\">\\n        </mat-form-field>\\n      </div>\\n\\n      <div style=\\\"margin-top:10px; margin-bottom:20px\\\">\\n        Sales Order Details\\n      </div>\\n\\n      <table #table mat-table [dataSource]=\\\"detailDataSource\\\" class=\\\"mat-elevation-z8\\\">\\n        <ng-container matColumnDef=\\\"productNumber\\\">\\n          <th mat-header-cell *matHeaderCellDef> Product Number</th>\\n          <td mat-cell *matCellDef=\\\"let element;  let i = index;\\\">\\n            <mat-form-field style=\\\"width:250px !important\\\">\\n              <input tabindex=\\\"1\\\" required [disabled]=\\\"!element.editProductNumber\\\" (blur)=\\\"getProduct()\\\" matInput name=\\\"ProductNumberGrid{{i}}\\\"\\n                     [value]=\\\"element.productNumber\\\" [(ngModel)]=\\\"element.productNumber\\\">\\n            </mat-form-field>\\n          </td>\\n        </ng-container>\\n        <ng-container matColumnDef=\\\"description\\\">\\n          <th mat-header-cell *matHeaderCellDef> Description</th>\\n          <td mat-cell *matCellDef=\\\"let element;  let i = index;\\\">\\n            <mat-form-field style=\\\"width:250px !important\\\">\\n              <input [disabled]=\\\"true\\\" matInput name=\\\"DescriptionGrid{{i}}\\\" [value]=\\\"element.productDescription\\\">\\n            </mat-form-field>\\n          </td>\\n        </ng-container>\\n        <ng-container matColumnDef=\\\"unitPrice\\\">\\n          <th mat-header-cell *matHeaderCellDef> Unit Price</th>\\n          <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">\\n            <mat-form-field style=\\\"width:100px !important\\\">\\n              <input tabindex=\\\"2\\\" type=\\\"number\\\" required [disabled]=\\\"!element.editUnitPrice\\\" matInput name=\\\"UnitPriceGrid{{i}}\\\" [value]=\\\"element.unitPriceFormatted\\\"\\n                     [(ngModel)]=\\\"element.unitPriceFormatted\\\">\\n            </mat-form-field>\\n          </td>\\n        </ng-container>\\n        <ng-container matColumnDef=\\\"orderQuantity\\\">\\n          <th mat-header-cell *matHeaderCellDef> Order Quantity</th>\\n          <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">\\n            <mat-form-field style=\\\"width:100px !important\\\">\\n              <input tabindex=\\\"3\\\" type=\\\"number\\\" required [disabled]=\\\"!element.editQuantity\\\" matInput name=\\\"OrderQuantityGrid{{i}}\\\" [value]=\\\"element.orderQuantityFormatted\\\"\\n                     [(ngModel)]=\\\"element.orderQuantityFormatted\\\">\\n            </mat-form-field>\\n          </td>\\n        </ng-container>\\n        <ng-container matColumnDef=\\\"shippedQuantity\\\">\\n          <th mat-header-cell *matHeaderCellDef> Shipped Quantity</th>\\n          <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">\\n            <mat-form-field style=\\\"width:100px !important\\\">\\n              <input tabindex=\\\"3\\\" [disabled]=\\\"true\\\" matInput name=\\\"ShippedQuantityGrid{{i}}\\\" [value]=\\\"element.shippedQuantityFormatted\\\"\\n                     [(ngModel)]=\\\"element.shippedQuantityFormatted\\\">\\n            </mat-form-field>\\n          </td>\\n        </ng-container>\\n        <ng-container matColumnDef=\\\"actions\\\">\\n          <th mat-header-cell *matHeaderCellDef>Actions</th>\\n          <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">\\n            <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\">\\n              <button mat-menu-item [disabled]=\\\"element.disableAddButton\\\" (click)=\\\"addLineItem()\\\">\\n                <mat-icon>add</mat-icon>\\n                <span>Add</span>\\n              </button>\\n              <button mat-menu-item [disabled]=\\\"element.disableEditButton\\\" (click)=\\\"editLineItem(i)\\\">\\n                <mat-icon>edit</mat-icon>\\n                <span>Edit</span>\\n              </button>\\n              <button mat-menu-item [disabled]=\\\"element.disableCancelButton\\\" (click)=\\\"cancelEdit(i)\\\">\\n                <mat-icon>undo</mat-icon>\\n                <span>Cancel</span>\\n              </button>\\n              <button mat-menu-item [disabled]=\\\"element.disableSaveButton\\\" (click)=\\\"updateLineItem(i)\\\">\\n                <mat-icon>save</mat-icon>\\n                <span>Save</span>\\n              </button>\\n              <button mat-menu-item [disabled]=\\\"element.disableDeleteButton\\\" (click)=\\\"deleteLineItemDialog(i)\\\">\\n                <mat-icon>remove</mat-icon>\\n                <span>Delete</span>\\n              </button>\\n            </mat-menu>\\n          </td>\\n        </ng-container>\\n        <tr mat-header-row *matHeaderRowDef=\\\"salesOrderViewModel.displayedColumns\\\"></tr>\\n        <tr style=\\\"cursor: pointer;\\\" mat-row *matRowDef=\\\"let row; columns: salesOrderViewModel.displayedColumns; let i = index\\\"></tr>\\n      </table>\\n\\n    </form>\\n  </mat-card-content>\\n  <mat-card-actions>\\n      <button [disabled]=\\\"disableSubmitButton\\\" mat-flat-button color=\\\"primary\\\"\\n      (click)=\\\"submitSalesOrderDialog()\\\">Submit Sales Order</button>&nbsp;\\n  </mat-card-actions>\\n</mat-card>\\n\"","\nimport { SalesOrderDetailViewModel } from './../view-models/sales-order-detail.viewmodel';\nimport { ProductViewModel } from './../view-models/product.viewmodel';\nimport { AlertService } from './../../shared-components-services/alert.service';\nimport { Component, OnInit, OnDestroy, Inject } from '@angular/core';\nimport { SalesOrderViewModel } from '../view-models/sales-order.viewmodel';\nimport { SalesOrderViewModelResponse } from '../view-models/sales-order-response.viewmodel';\nimport { SessionService } from '../../shared-components-services/session.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { HttpService } from '../../shared-components-services/http.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ProductViewModelResponse } from '../view-models/product-response.viewmodel';\nimport { SalesOrderDetailViewModelResponse } from '../view-models/sales-order-detail-response.viewmodel';\n\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n\nexport interface DeleteSalesOrderLineItemDialogData {\n  title: string;\n  index: number;\n  productNumber: string;\n  orderQuantity: string;\n  unitPrice: string;\n}\n\nexport interface SubmitSalesOrderDialogData {\n  title: string;\n  salesOrderNumber: string;\n  orderTotal: string;\n}\n\n@Component({\n  selector: 'app-sales-order-maintenance',\n  templateUrl: './sales-order-maintenance.component.html',\n  styleUrls: ['./sales-order-maintenance.component.css']\n})\nexport class SalesOrderMaintenanceComponent implements OnInit, OnDestroy {\n\n  public salesOrderViewModel: SalesOrderViewModel;\n  private routerSubscription: Subscription;\n  public detailDataSource = new MatTableDataSource<SalesOrderDetailViewModel>();\n  private currentLineItem: number;\n  public disableSubmitButton: boolean;\n\n  constructor(public dialog: MatDialog, private router: Router, private httpService: HttpService, private route: ActivatedRoute,\n    private sessionService: SessionService, private alertService: AlertService) {\n\n    this.disableSubmitButton = true;\n    this.salesOrderViewModel = new SalesOrderViewModel();\n\n    let salesOrderDetailViewModel = new SalesOrderDetailViewModel();\n\n    salesOrderDetailViewModel.productDescription = '';\n    salesOrderDetailViewModel.productNumber = ' ';\n    salesOrderDetailViewModel.unitPriceFormatted = '';\n    salesOrderDetailViewModel.orderQuantityFormatted = '';\n    salesOrderDetailViewModel.editProductNumber = true;\n    salesOrderDetailViewModel.editQuantity = false;\n    salesOrderDetailViewModel.editUnitPrice = false;\n    salesOrderDetailViewModel.editMode = false;\n    salesOrderDetailViewModel.disableAddButton = true;\n    salesOrderDetailViewModel.disableCancelButton = true;\n    salesOrderDetailViewModel.disableDeleteButton = true;\n    salesOrderDetailViewModel.disableEditButton = true;\n    salesOrderDetailViewModel.disableSaveButton = true;\n\n    let salesOrderDetailViewModelOriginalValues = new SalesOrderDetailViewModel();\n\n    this.salesOrderViewModel.salesOrderDetails.push(salesOrderDetailViewModel);\n    this.salesOrderViewModel.salesOrderDetailsOriginalValues.push(salesOrderDetailViewModelOriginalValues);\n\n    this.detailDataSource.data = this.salesOrderViewModel.salesOrderDetails;\n\n  }\n\n  ngOnInit() {\n\n    this.routerSubscription = this.route.queryParams.subscribe(params => {\n      this.salesOrderViewModel.salesOrderId = +params['id'] || 0;\n      if (this.salesOrderViewModel.salesOrderId > 0) {\n        this.getSalesOrder();\n      }\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.routerSubscription.unsubscribe();\n  }\n\n  private getSalesOrder() {\n\n    let url = this.sessionService.appSettings.salesOrderManagementWebApiUrl + 'salesorder/getsalesorder';\n    this.httpService.HttpPost<SalesOrderViewModelResponse>(url, this.salesOrderViewModel)\n      .subscribe((response: SalesOrderViewModelResponse) => {\n        this.getSalesOrderSuccess(response);\n      }, response => this.getSalesOrderFailed(response));\n\n  }\n\n  private getSalesOrderSuccess(response: SalesOrderViewModelResponse) {\n\n    response.entity.orderDate = response.entity.dateCreated.toString().substring(0, 10);\n\n    this.salesOrderViewModel.customerName = response.entity.customerName;\n    this.salesOrderViewModel.accountId = response.entity.accountId;\n    this.salesOrderViewModel.addressLine1 = response.entity.addressLine1;\n    this.salesOrderViewModel.addressLine2 = response.entity.addressLine2;\n    this.salesOrderViewModel.city = response.entity.city;\n    this.salesOrderViewModel.region = response.entity.region;\n    this.salesOrderViewModel.postalCode = response.entity.postalCode;\n    this.salesOrderViewModel.salesOrderId = response.entity.salesOrderId;\n    this.salesOrderViewModel.salesOrderNumber = response.entity.salesOrderNumber;\n    this.salesOrderViewModel.orderDate = response.entity.orderDate;\n    this.salesOrderViewModel.orderTotal = response.entity.orderTotal;\n    this.salesOrderViewModel.salesOrderStatusDescription = response.entity.salesOrderStatusDescription;\n\n    this.salesOrderViewModel.orderTotalFormatted = response.entity.orderTotal.toFixed(2);\n\n    this.setEnableSubmitButton();\n\n    response.entity.salesOrderDetails.forEach(element => {\n\n      let salesOrderDetailViewModel = new SalesOrderDetailViewModel();\n      salesOrderDetailViewModel.salesOrderDetailId = element.salesOrderDetailId;\n      salesOrderDetailViewModel.salesOrderId = element.salesOrderId;\n      salesOrderDetailViewModel.productId = element.productId;\n      salesOrderDetailViewModel.productDescription = element.productDescription;\n      salesOrderDetailViewModel.productMasterId = element.productMasterId;\n      salesOrderDetailViewModel.productNumber = element.productNumber;\n      salesOrderDetailViewModel.unitPrice = element.unitPrice;\n      salesOrderDetailViewModel.orderQuantity = element.orderQuantity;\n      salesOrderDetailViewModel.orderQuantityFormatted = element.orderQuantity.toFixed(0);\n      salesOrderDetailViewModel.unitPriceFormatted = element.unitPrice.toFixed(2);\n      salesOrderDetailViewModel.shippedQuantityFormatted = element.shippedQuantity.toFixed(0);\n\n      salesOrderDetailViewModel.editQuantity = false;\n      salesOrderDetailViewModel.editUnitPrice = false;\n      salesOrderDetailViewModel.editProductNumber = false;\n      salesOrderDetailViewModel.editMode = false;\n      salesOrderDetailViewModel.disableAddButton = true;\n      salesOrderDetailViewModel.disableSaveButton = true;\n      salesOrderDetailViewModel.disableCancelButton = true;\n      salesOrderDetailViewModel.disableDeleteButton = false;\n      salesOrderDetailViewModel.disableEditButton = false;\n\n      let salesOrderDetailViewModelOriginalValues = new SalesOrderDetailViewModel();\n      salesOrderDetailViewModelOriginalValues .unitPrice = element.unitPrice;\n      salesOrderDetailViewModelOriginalValues .orderQuantity = element.orderQuantity;\n      salesOrderDetailViewModelOriginalValues .orderQuantityFormatted = element.orderQuantity.toFixed(0);\n      salesOrderDetailViewModelOriginalValues .unitPriceFormatted = element.unitPrice.toFixed(2);\n\n      this.salesOrderViewModel.salesOrderDetails.push(salesOrderDetailViewModel);\n      this.salesOrderViewModel.salesOrderDetailsOriginalValues.push(salesOrderDetailViewModelOriginalValues);\n\n    });\n\n    this.detailDataSource.data = this.salesOrderViewModel.salesOrderDetails;\n\n    this.salesOrderViewModel.displayedColumns = ['productNumber', 'description', 'unitPrice', 'orderQuantity', 'shippedQuantity', 'actions'];\n\n    if (this.salesOrderViewModel.salesOrderStatusDescription !== 'Open') {\n        this.disableSalesOrderButtons();\n    }\n\n  }\n\n  private getSalesOrderFailed(error: HttpErrorResponse) {\n\n    let errorResponse: SalesOrderViewModelResponse = error.error;\n    if (error.status > 0) {\n      this.alertService.ShowErrorMessage(errorResponse.returnMessage[0]);\n    } else {\n      this.alertService.ShowErrorMessage(error.message);\n    }\n\n  }\n\n  public getProduct() {\n\n    this.salesOrderViewModel.salesOrderDetails[0].productNumber\n      = this.salesOrderViewModel.salesOrderDetails[0].productNumber.trim();\n\n    if (this.salesOrderViewModel.salesOrderDetails[0].productNumber.length === 0) {\n      return;\n    }\n\n    let url = this.sessionService.appSettings.salesOrderManagementWebApiUrl + 'salesorder/getproduct';\n    let productViewModel = new ProductViewModel();\n    productViewModel.productNumber = this.salesOrderViewModel.salesOrderDetails[0].productNumber;\n    this.httpService.HttpPost<ProductViewModelResponse>(url, productViewModel)\n      .subscribe((response: ProductViewModelResponse) => {\n        this.getProductSuccess(response);\n      }, response => this.getProductFailed(response));\n\n  }\n\n  private getProductSuccess(response: ProductViewModelResponse) {\n\n    this.salesOrderViewModel.salesOrderDetails[0].productDescription = response.entity.description;\n    this.salesOrderViewModel.salesOrderDetails[0].productId = response.entity.productId;\n    this.salesOrderViewModel.salesOrderDetails[0].editQuantity = true;\n    this.salesOrderViewModel.salesOrderDetails[0].editUnitPrice = true;\n    this.salesOrderViewModel.salesOrderDetails[0].editMode = true;\n    this.salesOrderViewModel.salesOrderDetails[0].disableAddButton = false;\n\n  }\n\n  private getProductFailed(error: HttpErrorResponse) {\n\n    this.salesOrderViewModel.salesOrderDetails[0].disableAddButton = true;\n    let errorResponse: SalesOrderViewModelResponse = error.error;\n\n    if (error.status > 0) {\n      this.alertService.ShowErrorMessage(errorResponse.returnMessage[0]);\n    } else {\n      this.alertService.ShowErrorMessage(error.message);\n    }\n\n  }\n\n  public addLineItem() {\n\n    let salesOrderDetailViewModel = new SalesOrderDetailViewModel();\n\n    salesOrderDetailViewModel.salesOrderDetailId = 0;\n    salesOrderDetailViewModel.salesOrderId = this.salesOrderViewModel.salesOrderId;\n    salesOrderDetailViewModel.productId = this.salesOrderViewModel.salesOrderDetails[0].productId;\n    salesOrderDetailViewModel.productMasterId = this.salesOrderViewModel.salesOrderDetails[0].productMasterId;\n    salesOrderDetailViewModel.productNumber = this.salesOrderViewModel.salesOrderDetails[0].productNumber;\n    salesOrderDetailViewModel.unitPrice = parseFloat(this.salesOrderViewModel.salesOrderDetails[0].unitPriceFormatted);\n    salesOrderDetailViewModel.orderQuantity = parseInt(this.salesOrderViewModel.salesOrderDetails[0].orderQuantityFormatted, 0);\n\n    let url = this.sessionService.appSettings.salesOrderManagementWebApiUrl + 'salesorder/createsalesorderdetail';\n    this.httpService.HttpPost<SalesOrderDetailViewModelResponse>(url, salesOrderDetailViewModel)\n      .subscribe((response: SalesOrderDetailViewModelResponse) => {\n        this.addLineItemSuccess(response);\n      }, response => this.addLineItemFailed(response));\n\n  }\n\n  private addLineItemSuccess(response: SalesOrderDetailViewModelResponse) {\n\n    let salesOrderDetailViewModel = new SalesOrderDetailViewModel();\n\n    salesOrderDetailViewModel.salesOrderDetailId = response.entity.salesOrderDetailId;\n    salesOrderDetailViewModel.salesOrderId = response.entity.salesOrderId;\n    salesOrderDetailViewModel.productId = response.entity.productId;\n    salesOrderDetailViewModel.productDescription = response.entity.productDescription;\n    salesOrderDetailViewModel.productMasterId = response.entity.productMasterId;\n    salesOrderDetailViewModel.productNumber = response.entity.productNumber;\n    salesOrderDetailViewModel.unitPrice = response.entity.unitPrice;\n    salesOrderDetailViewModel.orderQuantity = response.entity.orderQuantity;\n    salesOrderDetailViewModel.orderQuantityFormatted = response.entity.orderQuantity.toFixed(0);\n    salesOrderDetailViewModel.unitPriceFormatted = response.entity.unitPrice.toFixed(2);\n\n    this.salesOrderViewModel.orderTotal = response.entity.orderTotal;\n    this.salesOrderViewModel.orderTotalFormatted = response.entity.orderTotal.toFixed(2);\n\n    salesOrderDetailViewModel.editQuantity = false;\n    salesOrderDetailViewModel.editUnitPrice = false;\n    salesOrderDetailViewModel.editProductNumber = false;\n    salesOrderDetailViewModel.editMode = false;\n    salesOrderDetailViewModel.disableAddButton = true;\n    salesOrderDetailViewModel.disableSaveButton = true;\n    salesOrderDetailViewModel.disableCancelButton = true;\n    salesOrderDetailViewModel.disableDeleteButton = false;\n    salesOrderDetailViewModel.disableEditButton = false;\n\n\n    let salesOrderDetailViewModelOriginalValues = new SalesOrderDetailViewModel();\n    salesOrderDetailViewModelOriginalValues.unitPrice = response.entity.unitPrice;\n    salesOrderDetailViewModelOriginalValues.orderQuantity = response.entity.orderQuantity;\n    salesOrderDetailViewModelOriginalValues.orderQuantityFormatted = response.entity.orderQuantity.toFixed(0);\n    salesOrderDetailViewModelOriginalValues.unitPriceFormatted = response.entity.unitPrice.toFixed(2);\n\n    this.salesOrderViewModel.salesOrderDetails.push(salesOrderDetailViewModel);\n    this.salesOrderViewModel.salesOrderDetailsOriginalValues.push(salesOrderDetailViewModelOriginalValues);\n\n    this.detailDataSource.data = this.salesOrderViewModel.salesOrderDetails;\n\n    this.salesOrderViewModel.salesOrderDetails[0].productNumber = ' ';\n    this.salesOrderViewModel.salesOrderDetails[0].productDescription = ' ';\n    this.salesOrderViewModel.salesOrderDetails[0].unitPrice = 0.0;\n    this.salesOrderViewModel.salesOrderDetails[0].unitPriceFormatted = '';\n    this.salesOrderViewModel.salesOrderDetails[0].orderQuantity = 0;\n    this.salesOrderViewModel.salesOrderDetails[0].orderQuantityFormatted = '';\n    this.salesOrderViewModel.salesOrderDetails[0].editQuantity = false;\n    this.salesOrderViewModel.salesOrderDetails[0].editUnitPrice = false;\n    this.salesOrderViewModel.salesOrderDetails[0].editProductNumber = true;\n    this.salesOrderViewModel.salesOrderDetails[0].editMode = false;\n    this.salesOrderViewModel.salesOrderDetails[0].disableAddButton = true;\n    this.salesOrderViewModel.salesOrderDetails[0].disableCancelButton = true;\n    this.salesOrderViewModel.salesOrderDetails[0].disableDeleteButton = true;\n    this.salesOrderViewModel.salesOrderDetails[0].disableEditButton = true;\n    this.salesOrderViewModel.salesOrderDetails[0].disableSaveButton = true;\n\n    const message = 'Line Item successfully saved.';\n    this.alertService.ShowSuccessMessage(message);\n\n  }\n\n  private addLineItemFailed(error: HttpErrorResponse) {\n\n    let errorResponse: SalesOrderDetailViewModelResponse = error.error;\n    console.log(error.status + ' error status');\n    if (error.status > 0) {\n      this.alertService.ShowErrorMessage(errorResponse.returnMessage[0]);\n    } else {\n      this.alertService.ShowErrorMessage(error.message);\n    }\n\n  }\n\n  public editLineItem(i: number) {\n\n    this.salesOrderViewModel.salesOrderDetails[i].editQuantity = true;\n    this.salesOrderViewModel.salesOrderDetails[i].editUnitPrice = true;\n    this.salesOrderViewModel.salesOrderDetails[i].editMode = true;\n    this.salesOrderViewModel.salesOrderDetails[i].disableAddButton = true;\n    this.salesOrderViewModel.salesOrderDetails[i].disableSaveButton = false;\n    this.salesOrderViewModel.salesOrderDetails[i].disableCancelButton = false;\n    this.salesOrderViewModel.salesOrderDetails[i].disableDeleteButton = true;\n    this.salesOrderViewModel.salesOrderDetails[i].disableEditButton = true;\n\n    let salesOrderDetailViewModelOriginalValues = new SalesOrderDetailViewModel();\n \n    salesOrderDetailViewModelOriginalValues.unitPrice =\n      this.salesOrderViewModel.salesOrderDetails[i].unitPrice;\n\n    salesOrderDetailViewModelOriginalValues.orderQuantity =\n      this.salesOrderViewModel.salesOrderDetails[i].orderQuantity;\n\n    salesOrderDetailViewModelOriginalValues.orderQuantityFormatted =\n      this.salesOrderViewModel.salesOrderDetails[i].orderQuantity.toFixed(0);\n\n    salesOrderDetailViewModelOriginalValues.unitPriceFormatted =\n      this.salesOrderViewModel.salesOrderDetails[i].unitPrice.toFixed(2);\n\n    this.salesOrderViewModel.salesOrderDetailsOriginalValues[i] =\n      salesOrderDetailViewModelOriginalValues;\n\n    this.setDisableSubmitButton();\n\n  }\n\n  public updateLineItem(i: number) {\n\n    this.currentLineItem = i;\n\n    let salesOrderDetailViewModel = new SalesOrderDetailViewModel();\n\n    salesOrderDetailViewModel.salesOrderDetailId = this.salesOrderViewModel.salesOrderDetails[i].salesOrderDetailId;\n    salesOrderDetailViewModel.salesOrderId = this.salesOrderViewModel.salesOrderId;\n    salesOrderDetailViewModel.productId = this.salesOrderViewModel.salesOrderDetails[i].productId;\n    salesOrderDetailViewModel.productMasterId = this.salesOrderViewModel.salesOrderDetails[i].productMasterId;\n    salesOrderDetailViewModel.productNumber = this.salesOrderViewModel.salesOrderDetails[i].productNumber;\n    salesOrderDetailViewModel.unitPrice = parseFloat(this.salesOrderViewModel.salesOrderDetails[i].unitPriceFormatted);\n    salesOrderDetailViewModel.orderQuantity = parseInt(this.salesOrderViewModel.salesOrderDetails[i].orderQuantityFormatted, 0);\n\n    this.salesOrderViewModel.salesOrderDetails[this.currentLineItem].orderQuantity =\n        parseInt(this.salesOrderViewModel.salesOrderDetails[this.currentLineItem].orderQuantityFormatted, 0);\n    this.salesOrderViewModel.salesOrderDetails[this.currentLineItem].unitPrice =\n        parseFloat(this.salesOrderViewModel.salesOrderDetails[this.currentLineItem].unitPriceFormatted);\n\n    let url = this.sessionService.appSettings.salesOrderManagementWebApiUrl + 'salesorder/updatesalesorderdetail';\n    this.httpService.HttpPost<SalesOrderDetailViewModelResponse>(url, salesOrderDetailViewModel)\n      .subscribe((response: SalesOrderDetailViewModelResponse) => {\n        this.updateLineItemSuccess(response);\n      }, response => this.updateLineItemFailed(response));\n\n  }\n\n  private deleteLineItem(i: number) {\n\n    this.currentLineItem = i;\n\n    let salesOrderDetailViewModel = new SalesOrderDetailViewModel();\n\n    salesOrderDetailViewModel.salesOrderId = this.salesOrderViewModel.salesOrderDetails[i].salesOrderId;\n    salesOrderDetailViewModel.salesOrderDetailId = this.salesOrderViewModel.salesOrderDetails[i].salesOrderDetailId;\n\n    let url = this.sessionService.appSettings.salesOrderManagementWebApiUrl + 'salesorder/deletesalesorderdetail';\n    this.httpService.HttpPost<SalesOrderDetailViewModelResponse>(url, salesOrderDetailViewModel)\n      .subscribe((response: SalesOrderDetailViewModelResponse) => {\n        this.deleteLineItemSuccess(response);\n      }, response => this.deleteLineItemFailed(response));\n\n  }\n\n  private cancelEdit(i: number) {\n\n    this.salesOrderViewModel.salesOrderDetails[i].unitPrice =\n       this.salesOrderViewModel.salesOrderDetailsOriginalValues[i].unitPrice;\n\n    this.salesOrderViewModel.salesOrderDetails[i].unitPriceFormatted =\n      this.salesOrderViewModel.salesOrderDetailsOriginalValues[i].unitPriceFormatted;\n\n    this.salesOrderViewModel.salesOrderDetails[i].orderQuantity =\n      this.salesOrderViewModel.salesOrderDetailsOriginalValues[i].orderQuantity;\n\n    this.salesOrderViewModel.salesOrderDetails[i].orderQuantityFormatted =\n      this.salesOrderViewModel.salesOrderDetailsOriginalValues[i].orderQuantityFormatted;\n\n    this.salesOrderViewModel.salesOrderDetails[i].editQuantity = false;\n    this.salesOrderViewModel.salesOrderDetails[i].editUnitPrice = false;\n    this.salesOrderViewModel.salesOrderDetails[i].editMode = false;\n    this.salesOrderViewModel.salesOrderDetails[i].disableAddButton = true;\n    this.salesOrderViewModel.salesOrderDetails[i].disableSaveButton = true;\n    this.salesOrderViewModel.salesOrderDetails[i].disableCancelButton = true;\n    this.salesOrderViewModel.salesOrderDetails[i].disableDeleteButton = false;\n    this.salesOrderViewModel.salesOrderDetails[i].disableEditButton = false;\n\n    this.setEnableSubmitButton();\n\n  }\n\n  private updateLineItemSuccess(response: SalesOrderDetailViewModelResponse) {\n\n    this.salesOrderViewModel.salesOrderDetails[this.currentLineItem].editQuantity = false;\n    this.salesOrderViewModel.salesOrderDetails[this.currentLineItem].editUnitPrice = false;\n    this.salesOrderViewModel.salesOrderDetails[this.currentLineItem].editMode = false;\n    this.salesOrderViewModel.salesOrderDetails[this.currentLineItem].disableAddButton = true;\n    this.salesOrderViewModel.salesOrderDetails[this.currentLineItem].disableSaveButton = true;\n    this.salesOrderViewModel.salesOrderDetails[this.currentLineItem].disableCancelButton = true;\n    this.salesOrderViewModel.salesOrderDetails[this.currentLineItem].disableDeleteButton = false;\n    this.salesOrderViewModel.salesOrderDetails[this.currentLineItem].disableEditButton = false;\n\n    this.salesOrderViewModel.salesOrderDetails[this.currentLineItem].orderQuantityFormatted =\n      this.salesOrderViewModel.salesOrderDetails[this.currentLineItem].orderQuantity.toFixed(0);\n    this.salesOrderViewModel.salesOrderDetails[this.currentLineItem].unitPriceFormatted =\n      this.salesOrderViewModel.salesOrderDetails[this.currentLineItem].unitPrice.toFixed(2);\n\n    this.salesOrderViewModel.orderTotal = response.entity.orderTotal;\n    this.salesOrderViewModel.orderTotalFormatted = response.entity.orderTotal.toFixed(2);\n\n    this.setEnableSubmitButton();\n\n    const message = 'Line Item successfully updated.';\n    this.alertService.ShowSuccessMessage(message);\n\n  }\n\n  private deleteLineItemSuccess(response: SalesOrderDetailViewModelResponse) {\n\n    this.salesOrderViewModel.salesOrderDetails.splice(this.currentLineItem, 1);\n    this.salesOrderViewModel.salesOrderDetailsOriginalValues.splice(this.currentLineItem, 1);\n\n    this.detailDataSource.data = this.salesOrderViewModel.salesOrderDetails;\n\n    this.salesOrderViewModel.orderTotal = response.entity.orderTotal;\n    this.salesOrderViewModel.orderTotalFormatted = response.entity.orderTotal.toFixed(2);\n\n    this.setEnableSubmitButton();\n\n    const message = 'Line Item successfully deleted.';\n    this.alertService.ShowSuccessMessage(message);\n\n  }\n\n  private deleteLineItemFailed(error: HttpErrorResponse) {\n\n    let errorResponse: SalesOrderDetailViewModelResponse = error.error;\n    console.log(error.status + ' error status');\n    if (error.status > 0) {\n      this.alertService.ShowErrorMessage(errorResponse.returnMessage[0]);\n    } else {\n      this.alertService.ShowErrorMessage(error.message);\n    }\n\n  }\n\n  private updateLineItemFailed(error: HttpErrorResponse) {\n\n    let errorResponse: SalesOrderDetailViewModelResponse = error.error;\n    console.log(error.status + ' error status');\n    if (error.status > 0) {\n      this.alertService.ShowErrorMessage(errorResponse.returnMessage[0]);\n    } else {\n      this.alertService.ShowErrorMessage(error.message);\n    }\n\n  }\n\n  private setDisableSubmitButton() {\n    this.disableSubmitButton = true;\n  }\n\n  private setEnableSubmitButton() {\n    this.disableSubmitButton = true;\n    if (this.salesOrderViewModel.salesOrderDetails.length > 0 && this.salesOrderViewModel.salesOrderStatusDescription === 'Open') {\n      this.disableSubmitButton = false;\n    }\n  }\n\n  private submitSalesOrder() {\n    let salesOrderViewModel = new SalesOrderViewModel();\n\n    salesOrderViewModel.salesOrderId = this.salesOrderViewModel.salesOrderId;\n\n    let url = this.sessionService.appSettings.salesOrderManagementWebApiUrl + 'salesorder/submitsalesorder';\n    this.httpService.HttpPost<SalesOrderViewModelResponse>(url, salesOrderViewModel)\n      .subscribe((response: SalesOrderViewModelResponse) => {\n        this.submitSalesOrderSuccess(response);\n      }, response => this.submitSalesOrderFailed(response));\n\n  }\n\n  private submitSalesOrderSuccess(response: SalesOrderViewModelResponse) {\n\n    this.salesOrderViewModel.salesOrderStatusDescription = response.entity.salesOrderStatusDescription;\n\n    this.setDisableSubmitButton();\n\n    const message = 'Sales Order Submitted.';\n    this.alertService.ShowSuccessMessage(message);\n\n  }\n\n  private submitSalesOrderFailed(error: HttpErrorResponse) {\n\n    let errorResponse: SalesOrderViewModelResponse = error.error;\n    console.log(error.status + ' error status');\n    if (error.status > 0) {\n      this.alertService.ShowErrorMessage(errorResponse.returnMessage[0]);\n    } else {\n      this.alertService.ShowErrorMessage(error.message);\n    }\n\n  }\n\n  private disableSalesOrderButtons()\n  {\n\n  }\n\n  public deleteLineItemDialog(i: number): void {\n\n    let productNumber = this.salesOrderViewModel.salesOrderDetails[i].productNumber;\n    let orderQuantity = this.salesOrderViewModel.salesOrderDetails[i].orderQuantityFormatted;\n    let unitPrice = this.salesOrderViewModel.salesOrderDetails[i].unitPriceFormatted;\n    let index = i;\n\n    const dialogRef = this.dialog.open(DeleteSalesOrderLineItemDialogComponent, {\n      width: '50%',\n      data: {\n        title: 'Delete Sales Order Line Item',\n        index: index,\n        orderQuantity: orderQuantity,\n        unitPrice: unitPrice,\n        productNumber: productNumber\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      let returnedIndex = parseInt(result, 0);\n      if (returnedIndex > 0 ) {\n        this.deleteLineItem(returnedIndex);\n      }\n    });\n  }\n\n  public submitSalesOrderDialog(): void {\n\n    let salesOrderNumber = this.salesOrderViewModel.salesOrderNumber;\n    let orderTotal = this.salesOrderViewModel.orderTotalFormatted;\n    const dialogRef = this.dialog.open(SubmitSalesOrderDialogComponent, {\n      width: '50%',\n      data: {\n        title: 'Submit Sales Order',\n        orderTotal: orderTotal,\n        salesOrderNumber: salesOrderNumber\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      let returnedResponse = parseInt(result, 0);\n      if (returnedResponse > 0 ) {\n        this.submitSalesOrder();\n      }\n    });\n  }\n\n}\n\n@Component({\n  selector: 'app-delete-sales-order-lineitem-dialog',\n  templateUrl: 'delete-sales-order-lineitem-dialog.html',\n})\nexport class DeleteSalesOrderLineItemDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteSalesOrderLineItemDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DeleteSalesOrderLineItemDialogData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n\n@Component({\n  selector: 'app-submit-sales-order-dialog',\n  templateUrl: 'submit-sales-order-dialog.html',\n})\nexport class SubmitSalesOrderDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<SubmitSalesOrderDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: SubmitSalesOrderDialogData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"<h1 mat-dialog-title>{{data.title}}</h1>\\n<div mat-dialog-content>\\n  <p>Are you sure you want to Submit this Sales Order</p>\\n  <mat-form-field>\\n    <input matInput [disabled]=\\\"true\\\" [(ngModel)]=\\\"data.salesOrderNumber\\\" placeholder=\\\"Sales Order #\\\">\\n  </mat-form-field>&nbsp;\\n\\n  <mat-form-field>\\n        <input matInput [disabled]=\\\"true\\\" [(ngModel)]=\\\"data.orderTotal\\\" placeholder=\\\"Order Total\\\">\\n      </mat-form-field>&nbsp;\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button [mat-dialog-close]=\\\"0\\\">No</button>\\n  <button mat-button [mat-dialog-close]=\\\"1\\\" cdkFocusInitial>Yes</button>\\n</div>\\n\"","module.exports = \"\"","module.exports = \"<mat-toolbar style=\\\"background-color:green\\\">\\n\\n  <div>\\n    <a mat-list-item>\\n      <mat-icon class=\\\"icon\\\">dashboard</mat-icon>\\n      <span class=\\\"label\\\">Sales Order Management</span>\\n    </a>\\n  </div>\\n\\n  <span class=\\\"spacer\\\"></span>\\n\\n  <div style=\\\"margin-right:20px;\\\" class=\\\"mat-body\\\">\\n    <a mat-list-item [routerLink]=\\\"['/salesordermanagement/customer-maintenance']\\\">\\n      <mat-icon class=\\\"icon\\\">dashboard</mat-icon>\\n      <span class=\\\"label\\\">Customer Maintenance</span>\\n    </a>\\n  </div>\\n\\n  <div style=\\\"margin-right:20px;\\\" class=\\\"mat-body\\\">\\n    <a mat-list-item [routerLink]=\\\"['/salesordermanagement/customer-inquiry']\\\">\\n      <mat-icon class=\\\"icon\\\">dashboard</mat-icon>\\n      <span class=\\\"label\\\">Customer Inquiry</span>\\n    </a>\\n  </div>\\n\\n  <div style=\\\"margin-right:20px;\\\" class=\\\"mat-body\\\">\\n    <a mat-list-item [routerLink]=\\\"['/salesordermanagement/sales-order-inquiry']\\\">\\n      <mat-icon class=\\\"icon\\\">dashboard</mat-icon>\\n      <span class=\\\"label\\\">Sales Order Inquiry</span>\\n    </a>\\n  </div>\\n\\n</mat-toolbar>\\n\"","\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sales-order-management-nav-bar',\n  templateUrl: './sales-order-management-nav-bar.component.html',\n  styleUrls: ['./sales-order-management-nav-bar.component.css']\n})\nexport class SalesOrderManagementNavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n","\nimport { CustomerMaintenanceComponent } from './customer-maintenance/customer-maintenance.component';\nimport { CustomerInquiryComponent } from './customer-inquiry/customer-inquiry.component';\nimport { SalesOrderMaintenanceComponent } from './sales-order-maintenance/sales-order-maintenance.component';\nimport { SalesOrderInquiryComponent } from './sales-order-inquiry/sales-order-inquiry.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material.module';\nimport { SalesOrderManagementRoutingModule } from './sales-order-management.routing';\nimport { SalesOrderManagementNavBarComponent } from './sales-order-management-nav-bar/sales-order-management-nav-bar.component';\nimport { DeleteSalesOrderLineItemDialogComponent } from './sales-order-maintenance/sales-order-maintenance.component';\nimport { SubmitSalesOrderDialogComponent } from './sales-order-maintenance/sales-order-maintenance.component';\n\n@NgModule({\n    imports: [\n        SalesOrderManagementRoutingModule,\n        CommonModule,\n        FormsModule,\n        MaterialModule\n    ],\n    entryComponents: [DeleteSalesOrderLineItemDialogComponent, SubmitSalesOrderDialogComponent],\n    declarations: [CustomerInquiryComponent, CustomerMaintenanceComponent,\n        SalesOrderInquiryComponent, SalesOrderMaintenanceComponent,\n        SalesOrderManagementNavBarComponent, DeleteSalesOrderLineItemDialogComponent, SubmitSalesOrderDialogComponent]\n})\nexport class SalesOrderManagementModule {\n}\n","import { SalesOrderMaintenanceComponent } from './sales-order-maintenance/sales-order-maintenance.component';\nimport { SalesOrderInquiryComponent } from './sales-order-inquiry/sales-order-inquiry.component';\nimport { CustomerMaintenanceComponent } from './customer-maintenance/customer-maintenance.component';\nimport { CustomerInquiryComponent } from './customer-inquiry/customer-inquiry.component';\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst SalesOrderManagementRoutes: Routes = [\n    { path: '', component: SalesOrderInquiryComponent },\n    { path: 'customer-maintenance', component: CustomerMaintenanceComponent},\n    { path: 'customer-maintenance/:id', component: CustomerMaintenanceComponent},\n    { path: 'customer-inquiry', component: CustomerInquiryComponent },\n    { path: 'sales-order-maintenance', component: SalesOrderMaintenanceComponent},\n    { path: 'sales-order-maintenance/:id', component: SalesOrderMaintenanceComponent},\n    { path: 'sales-order-inquiry', component: SalesOrderInquiryComponent },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(SalesOrderManagementRoutes)\n    ],\n    exports: [RouterModule]\n})\nexport class SalesOrderManagementRoutingModule { }\n\n","\nimport { CustomerViewModel } from '../view-models/customer.viewmodel';\n\nexport class CustomerInquiryViewModel {\n    public customerName: string;\n    public currentPageNumber: number;\n    public currentPageIndex: number;\n    public pageSize: number;\n    public sortDirection: string;\n    public sortExpression: string;\n    public totalPages: number;\n    public totalCustomers: number;\n    public customers: Array<CustomerViewModel>;\n    public displayedColumns: Array<string>;\n    public pageSizeOptions: Array<number>;\n}\n","export class CustomerViewModel {\n    public customerId: number;\n    public customerName: string;\n    public addressLine1: string;\n    public addressLine2: string;\n    public city: string;\n    public region: string;\n    public postalCode: string;\n}\n","\nexport class ProductViewModel {\n    public accountId: number;\n    public productId: number;\n    public productMasterId: number;\n    public productNumber: string;\n    public description: string;\n    public unitPrice: number;\n    public orderQuantity: number;\n}\n","\nexport class SalesOrderDetailViewModel {\n  public salesOrderDetailId: number;\n  public salesOrderId: number;\n  public productId: number;\n  public productMasterId: number;\n  public productNumber: string;\n  public productDescription: string;\n  public unitPrice: number;\n  public unitPriceFormatted: string;\n  public orderQuantity: number;\n  public shippedQuantity: number;\n  public orderTotal: number;\n  public orderQuantityFormatted: string;\n  public shippedQuantityFormatted: string;\n  public dateCreated: Date;\n  public dateUpdated: Date;\n  public editQuantity: Boolean;\n  public editUnitPrice: Boolean;\n  public editProductNumber: Boolean;\n  public editMode: Boolean;\n  public disableSaveButton: Boolean;\n  public disableEditButton: Boolean;\n  public disableAddButton: Boolean;\n  public disableCancelButton: Boolean;\n  public disableDeleteButton: Boolean;\n}\n","\nimport { SalesOrderViewModel } from '../view-models/sales-order.viewmodel';\n\nexport class SalesOrderInquiryViewModel {\n    public customerName: string;\n    public currentPageNumber: number;\n    public currentPageIndex: number;\n    public pageSize: number;\n    public sortDirection: string;\n    public sortExpression: string;\n    public totalPages: number;\n    public totalSalesOrders: number;\n    public salesOrders: Array<SalesOrderViewModel>;\n    public displayedColumns: Array<string>;\n    public pageSizeOptions: Array<number>;\n}\n","\nimport { SalesOrderDetailViewModel } from './sales-order-detail.viewmodel';\n\nexport class SalesOrderViewModel {\n\n    constructor() {\n        this.salesOrderDetails = new Array<SalesOrderDetailViewModel>();\n        this.salesOrderDetailsOriginalValues = new Array<SalesOrderDetailViewModel>();\n    }\n\n    public salesOrderId: number;\n    public salesOrderNumber: number;\n    public accountId: number;\n    public customerId: number;\n    public customerName: string;\n    public addressLine1: string;\n    public addressLine2: string;\n    public city: string;\n    public region: string;\n    public postalCode: string;\n    public orderTotal: number;\n    public orderTotalFormatted: string;\n    public salesOrderStatusId: number;\n    public salesOrderStatusDescription: string;\n    public dateCreated: Date;\n    public orderDate: string;\n    public dateUpdated: Date;\n    public salesOrderDetails: Array<SalesOrderDetailViewModel>;\n    public salesOrderDetailsOriginalValues: Array<SalesOrderDetailViewModel>;\n    public displayedColumns: Array<string>;\n\n}\n"],"sourceRoot":""}