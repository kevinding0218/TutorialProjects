// <auto-generated />
using System;
using CodeProject.PurchaseOrderManagement.Data.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CodeProject.PurchaseOrderManagement.Data.EntityFramework.Migrations
{
    [DbContext(typeof(PurchaseOrderManagementDatabase))]
    [Migration("20181118152323_InitialDatabase")]
    partial class InitialDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CodeProject.PurchaseOrderManagement.Data.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<string>("BinLocation");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("Description");

                    b.Property<int>("OnOrderQuantity");

                    b.Property<int>("ProductMasterId");

                    b.Property<string>("ProductNumber");

                    b.Property<double>("UnitPrice");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductNumber");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("CodeProject.PurchaseOrderManagement.Data.Entities.PurchaseOrder", b =>
                {
                    b.Property<int>("PurchaseOrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<double>("OrderTotal");

                    b.Property<int>("PurchaseOrderNumber");

                    b.Property<int>("PurchaseOrderStatusId");

                    b.Property<int>("SupplierId");

                    b.HasKey("PurchaseOrderId");

                    b.HasIndex("PurchaseOrderStatusId");

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("CodeProject.PurchaseOrderManagement.Data.Entities.PurchaseOrderDetail", b =>
                {
                    b.Property<int>("PurchaseOrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<int>("OrderQuantity");

                    b.Property<int>("ProductId");

                    b.Property<int>("PurchaseOrderId");

                    b.Property<int>("ReceiviedQuantity");

                    b.Property<double>("UnitPrice");

                    b.HasKey("PurchaseOrderDetailId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseOrderDetails");
                });

            modelBuilder.Entity("CodeProject.PurchaseOrderManagement.Data.Entities.PurchaseOrderNumberSequence", b =>
                {
                    b.Property<int>("PurchaseOrderNumberSequenceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<int>("PurchaseOrderNumber");

                    b.HasKey("PurchaseOrderNumberSequenceId");

                    b.ToTable("PurchaseOrderNumberSequences");
                });

            modelBuilder.Entity("CodeProject.PurchaseOrderManagement.Data.Entities.PurchaseOrderStatus", b =>
                {
                    b.Property<int>("PurchaseOrderStatusId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.HasKey("PurchaseOrderStatusId");

                    b.ToTable("PurchaseOrderStatuses");

                    b.HasData(
                        new { PurchaseOrderStatusId = 1, Description = "Open" },
                        new { PurchaseOrderStatusId = 2, Description = "Submitted" },
                        new { PurchaseOrderStatusId = 3, Description = "Completed" }
                    );
                });

            modelBuilder.Entity("CodeProject.PurchaseOrderManagement.Data.Entities.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<string>("AddressLine1");

                    b.Property<string>("AddressLine2");

                    b.Property<string>("City");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("Name");

                    b.Property<string>("PostalCode");

                    b.Property<string>("Region");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("CodeProject.PurchaseOrderManagement.Data.Entities.TransactionQueueInbound", b =>
                {
                    b.Property<int>("TransactionQueueInboundId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("ExchangeName");

                    b.Property<string>("Payload");

                    b.Property<int>("SenderTransactionQueueId");

                    b.Property<string>("TransactionCode");

                    b.HasKey("TransactionQueueInboundId");

                    b.ToTable("TransactionQueueInbound");
                });

            modelBuilder.Entity("CodeProject.PurchaseOrderManagement.Data.Entities.TransactionQueueInboundHistory", b =>
                {
                    b.Property<int>("TransactionQueueInboundHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateCreatedInbound");

                    b.Property<bool>("DuplicateMessage");

                    b.Property<string>("ErrorMessage");

                    b.Property<string>("ExchangeName");

                    b.Property<string>("Payload");

                    b.Property<bool>("ProcessedSuccessfully");

                    b.Property<int>("SenderTransactionQueueId");

                    b.Property<string>("TransactionCode");

                    b.Property<int>("TransactionQueueInboundId");

                    b.HasKey("TransactionQueueInboundHistoryId");

                    b.ToTable("TransactionQueueInboundHistory");
                });

            modelBuilder.Entity("CodeProject.PurchaseOrderManagement.Data.Entities.TransactionQueueOutbound", b =>
                {
                    b.Property<int>("TransactionQueueOutboundId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateSentToExchange");

                    b.Property<DateTime>("DateToResendToExchange");

                    b.Property<string>("ExchangeName");

                    b.Property<string>("Payload");

                    b.Property<bool>("SentToExchange");

                    b.Property<string>("TransactionCode");

                    b.HasKey("TransactionQueueOutboundId");

                    b.ToTable("TransactionQueueOutbound");
                });

            modelBuilder.Entity("CodeProject.PurchaseOrderManagement.Data.Entities.TransactionQueueOutboundHistory", b =>
                {
                    b.Property<int>("TransactionQueueOutboundHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateOutboundTransactionCreated");

                    b.Property<DateTime>("DateSentToExchange");

                    b.Property<DateTime>("DateToResendToExchange");

                    b.Property<string>("ExchangeName");

                    b.Property<string>("Payload");

                    b.Property<bool>("SentToExchange");

                    b.Property<string>("TransactionCode");

                    b.Property<int>("TransactionQueueOutboundId");

                    b.HasKey("TransactionQueueOutboundHistoryId");

                    b.ToTable("TransactionQueueOutboundHistory");
                });

            modelBuilder.Entity("CodeProject.PurchaseOrderManagement.Data.Entities.TransactionQueueSemaphore", b =>
                {
                    b.Property<int>("TransactionQueueSemaphoreId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("SemaphoreKey");

                    b.HasKey("TransactionQueueSemaphoreId");

                    b.HasIndex("SemaphoreKey")
                        .IsUnique()
                        .HasFilter("[SemaphoreKey] IS NOT NULL");

                    b.ToTable("TransactionQueueSemaphores");
                });

            modelBuilder.Entity("CodeProject.PurchaseOrderManagement.Data.Entities.PurchaseOrder", b =>
                {
                    b.HasOne("CodeProject.PurchaseOrderManagement.Data.Entities.PurchaseOrderStatus", "PurchaseOrderStatus")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CodeProject.PurchaseOrderManagement.Data.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CodeProject.PurchaseOrderManagement.Data.Entities.PurchaseOrderDetail", b =>
                {
                    b.HasOne("CodeProject.PurchaseOrderManagement.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CodeProject.PurchaseOrderManagement.Data.Entities.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderDetails")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
